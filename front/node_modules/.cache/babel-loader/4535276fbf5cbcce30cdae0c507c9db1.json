{"ast":null,"code":"var _jsxFileName = \"/storage/Uni/VII_semester/SE/se-front/src/BrowseFlights.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from 'react';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { Box, FormControl, Grid, InputLabel, MenuItem, Paper, Select, Slider, Typography } from '@material-ui/core';\nimport $ from 'jquery';\nimport { useForm, Form } from './useForm';\nimport DataGridTable from './DataGridTable';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    verticalAlign: 'middle',\n    '& > *': {\n      margin: theme.spacing(6),\n      width: '100%'\n      /* height: theme.spacing(16), */\n\n    },\n    backgroundColor: '#f2f2f2'\n  },\n  grid: {\n    padding: theme.spacing(1)\n  },\n  input: {\n    width: 300\n  },\n  slider: {\n    width: '80%'\n  },\n  buttonBox: {\n    margin: theme.spacing(6)\n  }\n}));\nconst mockCodes = ['KPNL145', 'KNUGOVNO', '145LOVE145'];\nconst mockCities = ['Rubizhne', 'Paris', 'London']; //TODO change prices, possibly write custom Label Format\n\nconst mockMaxPrice = 10000;\nconst marks = [{\n  value: 0,\n  label: '00:00'\n}, {\n  value: 360,\n  label: '06:00'\n}, {\n  value: 720,\n  label: '12:00'\n}, {\n  value: 1080,\n  label: '18:00'\n}, {\n  value: 1439,\n  label: '23:59'\n}];\n\nfunction valueLabelFormat(value) {\n  let hours = Math.floor(value / 60);\n  let hourBegin = 60 * hours;\n  let minutes = value - hourBegin;\n  let str1 = hours.toString().padStart(2, \"0\");\n  let str2 = minutes.toString().padStart(2, \"0\");\n  return `${str1}:${str2}`;\n}\n\nconst emptyParams = {\n  code: '',\n  destination: '',\n  date: '',\n  durationOption: 0,\n  timeBegin: 0,\n  timeEnd: 1439,\n  priceBegin: 0,\n  priceEnd: mockMaxPrice\n};\nconst flights = [{\n  id: 'KPNL145',\n  destination: 'London'\n}, {\n  id: 'KNUGOVNO',\n  destination: 'London'\n}];\nconst columns = [{\n  field: 'id',\n  headerName: 'Code',\n  width: 200\n}, {\n  field: 'destination',\n  headerName: 'Destination',\n  width: 200\n}];\n/* renderCell: (params) => (\n            <Link href={'http://www.youtube.com'}>{params.code}</Link>\n        ) */\n//`/view/${params.code}`\n\nfunction BrowseFlights() {\n  _s();\n\n  const classes = useStyles();\n  const [showFilters, setShowFilters] = useState(true);\n  const [showList, setShowList] = useState(false);\n  const {\n    values,\n    setValues,\n    handleInputChange,\n    resetForm\n  } = useForm(emptyParams);\n\n  const handleSubmit = e => {\n    e.preventDefault(); //TODO: fetch flights\n  };\n\n  useEffect(() => {\n    console.log(values);\n  }, [values]);\n\n  const handleChangeSlider = (event, newValue, name) => {\n    if (!Array.isArray(newValue)) {\n      return;\n    }\n\n    setValues({ ...values,\n      [name + \"Begin\"]: newValue[0],\n      [name + \"End\"]: newValue[1]\n    });\n  }; //TODO: fetch codes, cities\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {},\n      children: [\"Filters\", /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"primary\",\n        \"aria-label\": \"show filters\",\n        size: \"small\",\n        onClick: () => setShowFilters(!showFilters),\n        children: showFilters ? /*#__PURE__*/_jsxDEV(ArrowDropUpIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 32\n        }, this) : /*#__PURE__*/_jsxDEV(ArrowDropDownIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 54\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }, this), !showFilters ? null : /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 5,\n          alignItems: \"center\",\n          className: classes.grid,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 2,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Flight Code:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 10,\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              value: values.code,\n              onInputChange: (event, newInputValue) => {\n                setValues({ ...values,\n                  code: newInputValue\n                });\n              },\n              className: classes.input,\n              size: \"small\",\n              id: \"combo-box-code\",\n              options: mockCodes,\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                placeholder: \"KPNL145\",\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 58\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 2,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Destination:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 10,\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              value: values.destination,\n              onInputChange: (event, newInputValue) => {\n                setValues({ ...values,\n                  destination: newInputValue\n                });\n              },\n              className: classes.input,\n              size: \"small\",\n              id: \"combo-box-destination\",\n              options: mockCities,\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                placeholder: \"Rubizhne\",\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 58\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 2,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 10,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              value: values.date,\n              onChange: event => {\n                setValues({ ...values,\n                  date: event.target.value\n                });\n              },\n              className: classes.input,\n              id: \"date\",\n              type: \"date\",\n              variant: \"outlined\",\n              size: \"small\",\n              InputLabelProps: {\n                shrink: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 2,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Flight Duration:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 10,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              className: classes.input,\n              variant: \"outlined\",\n              size: \"small\",\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                id: \"duration\",\n                value: values.durationOption,\n                onChange: event => {\n                  setValues({ ...values,\n                    durationOption: event.target.value\n                  });\n                },\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 0,\n                  children: \"Any\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 2,\n                  children: \"Short \\u2014 0-2 hr\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 6,\n                  children: \"Medium \\u2014 2-6 hr\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 10,\n                  children: \"Long \\u2014 6+ hr\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 2,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Departure Time:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 10,\n            children: /*#__PURE__*/_jsxDEV(Slider, {\n              value: [values.timeBegin, values.timeEnd],\n              onChange: (event, newValue, activeThumb) => {\n                handleChangeSlider(event, newValue, 'time');\n              },\n              className: classes.slider,\n              valueLabelFormat: valueLabelFormat,\n              defaultValue: [values.timeBegin, values.timeEnd],\n              step: 1,\n              min: 0,\n              max: 1439,\n              marks: marks,\n              valueLabelDisplay: \"auto\",\n              \"aria-labelledby\": \"non-linear-slider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 2,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Price:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 10,\n            children: /*#__PURE__*/_jsxDEV(Slider, {\n              value: [values.priceBegin, values.priceEnd],\n              onChange: (event, newValue, activeThumb) => {\n                handleChangeSlider(event, newValue, 'price');\n              },\n              className: classes.slider,\n              defaultValue: [values.priceBegin, values.priceEnd],\n              step: 1,\n              min: 1,\n              max: mockMaxPrice,\n              valueLabelDisplay: \"auto\",\n              \"aria-labelledby\": \"non-linear-slider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      textAlign: \"center\",\n      className: classes.buttonBox,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        size: \"large\",\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 28\n        }, this),\n        className: classes.button,\n        style: {\n          width: '25%'\n        },\n        type: \"submit\",\n        onClick: () => {\n          setShowList(true);\n        },\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 9\n    }, this), showList ? /*#__PURE__*/_jsxDEV(DataGridTable\n    /* list={flights} columns={columns} */\n    , {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 21\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 13\n  }, this);\n} //$(window).width() > 600 ? '100%' : 500\n\n\n_s(BrowseFlights, \"jOVHQKoHQfDDyibT0Ekm8M45BpA=\", false, function () {\n  return [useStyles, useForm];\n});\n\n_c = BrowseFlights;\nexport default BrowseFlights;\n\nvar _c;\n\n$RefreshReg$(_c, \"BrowseFlights\");","map":{"version":3,"sources":["/storage/Uni/VII_semester/SE/se-front/src/BrowseFlights.js"],"names":["React","Component","useState","useEffect","ArrowDropDownIcon","ArrowDropUpIcon","SearchIcon","makeStyles","Button","IconButton","TextField","Autocomplete","Box","FormControl","Grid","InputLabel","MenuItem","Paper","Select","Slider","Typography","$","useForm","Form","DataGridTable","Link","useStyles","theme","paper","verticalAlign","margin","spacing","width","backgroundColor","grid","padding","input","slider","buttonBox","mockCodes","mockCities","mockMaxPrice","marks","value","label","valueLabelFormat","hours","Math","floor","hourBegin","minutes","str1","toString","padStart","str2","emptyParams","code","destination","date","durationOption","timeBegin","timeEnd","priceBegin","priceEnd","flights","id","columns","field","headerName","BrowseFlights","classes","showFilters","setShowFilters","showList","setShowList","values","setValues","handleInputChange","resetForm","handleSubmit","e","preventDefault","console","log","handleChangeSlider","event","newValue","name","Array","isArray","newInputValue","params","target","shrink","activeThumb","button"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { Box, FormControl, Grid, InputLabel, MenuItem, Paper, Select, Slider, Typography, } from '@material-ui/core';\nimport $ from 'jquery';\nimport { useForm, Form } from './useForm';\nimport DataGridTable from './DataGridTable';\nimport { Link } from 'react-router-dom';\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        verticalAlign: 'middle',\n        '& > *': {\n            margin: theme.spacing(6),\n            width: '100%',\n            /* height: theme.spacing(16), */\n        },\n        backgroundColor: '#f2f2f2',\n    },\n    grid: {\n        padding: theme.spacing(1),\n    },\n    input: {\n        width: 300,\n    },\n    slider: {\n        width: '80%',\n    },\n    buttonBox: {\n        margin: theme.spacing(6),\n    },\n}));\n\nconst mockCodes = [\n    'KPNL145',\n    'KNUGOVNO',\n    '145LOVE145',\n];\n\nconst mockCities = [\n    'Rubizhne',\n    'Paris',\n    'London',\n];\n\n//TODO change prices, possibly write custom Label Format\nconst mockMaxPrice = 10000;\n\nconst marks = [\n    {\n        value: 0,\n        label: '00:00',\n    },\n    {\n        value: 360,\n        label: '06:00',\n    },\n    {\n        value: 720,\n        label: '12:00',\n    },\n    {\n        value: 1080,\n        label: '18:00',\n    },\n    {\n        value: 1439,\n        label: '23:59',\n    },\n];\n\nfunction valueLabelFormat(value) {\n    let hours = Math.floor(value / 60);\n    let hourBegin = 60 * hours;\n    let minutes = value - hourBegin;\n\n    let str1 = hours.toString().padStart(2, \"0\");\n    let str2 = minutes.toString().padStart(2, \"0\");\n\n    return `${str1}:${str2}`;\n}\n\nconst emptyParams = {\n    code: '',\n    destination: '',\n    date: '',\n    durationOption: 0,\n    timeBegin: 0,\n    timeEnd: 1439,\n    priceBegin: 0,\n    priceEnd: mockMaxPrice,\n};\n\n\n\nconst flights = [\n    {\n        id: 'KPNL145',\n        destination: 'London',\n    },\n    {\n        id: 'KNUGOVNO',\n        destination: 'London',\n    },\n];\n\nconst columns = [\n    {\n        field: 'id',\n        headerName: 'Code',\n        width: 200,\n\n    },\n    {\n        field: 'destination',\n        headerName: 'Destination',\n        width: 200,\n    }\n];\n\n/* renderCell: (params) => (\n            <Link href={'http://www.youtube.com'}>{params.code}</Link>\n        ) */\n\n//`/view/${params.code}`\n\n\nfunction BrowseFlights() {\n    const classes = useStyles();\n    const [showFilters, setShowFilters] = useState(true);\n    const [showList, setShowList] = useState(false);\n\n    const {\n        values,\n        setValues,\n        handleInputChange,\n        resetForm\n    } = useForm(emptyParams);\n\n    const handleSubmit = e => {\n        e.preventDefault()\n\n        //TODO: fetch flights\n    }\n\n    useEffect(() => {\n        console.log(values)\n    },[values])\n\n    const handleChangeSlider= (event, newValue, name) => {\n        if (!Array.isArray(newValue)) {\n            return;\n        }\n\n        setValues({\n            ...values,\n            [name+\"Begin\"]: newValue[0],\n            [name + \"End\"]: newValue[1],\n        })\n    };\n\n    //TODO: fetch codes, cities\n\n    return (<div>\n        <div style={{}}>\n            Filters\n            <IconButton\n                color=\"primary\"\n                aria-label=\"show filters\"\n                size=\"small\"\n                onClick={() => setShowFilters(!showFilters)}\n            >\n                {showFilters ? <ArrowDropUpIcon /> : <ArrowDropDownIcon />}\n            </IconButton>\n        </div>\n\n\n        {!showFilters ? null :\n            <Paper elevation={3} className={classes.paper}>\n                <Form onSubmit={handleSubmit}>\n                    <Grid container spacing={5} alignItems=\"center\" className={classes.grid}>\n                        <Grid item xs={12} md={2}>\n                            <Typography>Flight Code:</Typography>\n                        </Grid>\n                        <Grid item xs={12} md={10}>\n                            <Autocomplete\n                                value={values.code}\n                                onInputChange={(event, newInputValue) => {\n                                    setValues({\n                                        ...values,\n                                        code: newInputValue\n                                    })\n                                }}\n                                className={classes.input}\n                                size=\"small\"\n                                id=\"combo-box-code\"\n                                options={mockCodes}\n                                renderInput={(params) => <TextField {...params} placeholder=\"KPNL145\" variant=\"outlined\" />}\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} md={2}>\n                            <Typography>Destination:</Typography>\n                        </Grid>\n                        <Grid item xs={12} md={10}>\n                            <Autocomplete\n                                value={values.destination}\n                                onInputChange={(event, newInputValue) => {\n                                    setValues({\n                                        ...values,\n                                        destination: newInputValue\n                                    })\n                                }}\n                                className={classes.input}\n                                size=\"small\"\n                                id=\"combo-box-destination\"\n                                options={mockCities}\n                                renderInput={(params) => <TextField {...params} placeholder=\"Rubizhne\" variant=\"outlined\" />}\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} md={2}>\n                            <Typography>Date:</Typography>\n                        </Grid>\n                        <Grid item xs={12} md={10}>\n                            <TextField\n                                value={values.date}\n                                onChange={(event) => {\n                                    setValues({\n                                        ...values,\n                                        date: event.target.value\n                                    })\n                                }}\n                                className={classes.input}\n                                id=\"date\"\n                                type=\"date\"\n                                variant='outlined'\n                                size=\"small\"\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} md={2}>\n                            <Typography>Flight Duration:</Typography>\n                        </Grid>\n                        <Grid item xs={12} md={10}>\n                            <FormControl\n                                className={classes.input}\n                                variant=\"outlined\"\n                                size='small'\n                            >\n                                <Select\n                                    id=\"duration\"\n                                    value={values.durationOption}\n                                    onChange={(event) => {\n                                        setValues({\n                                            ...values,\n                                            durationOption: event.target.value\n                                        })\n                                    }}\n                                >\n                                    {/*TODO CHANGE VALUES FOR OPTIONS*/}\n                                    <MenuItem value={0}>Any</MenuItem>\n                                    <MenuItem value={2}>Short — 0-2 hr</MenuItem>\n                                    <MenuItem value={6}>Medium — 2-6 hr</MenuItem>\n                                    <MenuItem value={10}>Long — 6+ hr</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n\n                        <Grid item xs={12} md={2}>\n                            <Typography>Departure Time:</Typography>\n                        </Grid>\n                        <Grid item xs={12} md={10}>\n                            <Slider\n                                value={[values.timeBegin,values.timeEnd]}\n                                onChange={(event, newValue, activeThumb) => {\n                                    handleChangeSlider(event, newValue, 'time')\n                                }}\n                                className={classes.slider}\n                                valueLabelFormat={valueLabelFormat}\n                                defaultValue={[values.timeBegin, values.timeEnd]}\n                                step={1}\n                                min={0}\n                                max={1439}\n                                marks={marks}\n                                valueLabelDisplay=\"auto\"\n                                aria-labelledby=\"non-linear-slider\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} md={2}>\n                            <Typography>Price:</Typography>\n                        </Grid>\n                        <Grid item xs={12} md={10}>\n                            <Slider\n                                value={[values.priceBegin, values.priceEnd]}\n                                onChange={(event, newValue, activeThumb) => {\n                                    handleChangeSlider(event, newValue, 'price')\n                                }}\n                                className={classes.slider}\n                                defaultValue={[values.priceBegin, values.priceEnd]}\n                                step={1}\n                                min={1}\n                                max={mockMaxPrice}\n                                valueLabelDisplay=\"auto\"\n                                aria-labelledby=\"non-linear-slider\"\n                            />\n                        </Grid>\n\n                    </Grid>\n                </Form>\n            </Paper>           \n        }\n        \n        <Box\n            textAlign='center'\n            className={classes.buttonBox}\n        >\n            <Button\n                color='primary'\n                size='large'\n                variant=\"contained\"\n                startIcon={<SearchIcon />}\n                className={classes.button}\n                style={{\n                    width: '25%'\n                }}\n                type=\"submit\"\n                onClick={() => { setShowList(true) }}\n            >\n                Search\n            </Button>\n        </Box>\n        \n        {showList ? <DataGridTable /* list={flights} columns={columns} *//> : null}\n\n    </div>);\n\n}\n\n//$(window).width() > 600 ? '100%' : 500\nexport default BrowseFlights;"]},"metadata":{},"sourceType":"module"}