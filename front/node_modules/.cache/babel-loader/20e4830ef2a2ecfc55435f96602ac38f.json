{"ast":null,"code":"var _jsxFileName = \"/storage/Uni/VII_semester/SE/se-front/src/BrowseFlights.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from 'react';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { FormControl, Grid, InputLabel, MenuItem, Paper, Select, Slider, Typography } from '@material-ui/core';\nimport $ from 'jquery';\nimport { useForm, Form } from './useForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    verticalAlign: 'middle',\n    '& > *': {\n      margin: theme.spacing(2),\n      width: '100%'\n      /* height: theme.spacing(16), */\n\n    },\n    backgroundColor: '#f2f2f2'\n  },\n  grid: {\n    padding: theme.spacing(1)\n  },\n  input: {\n    width: 300\n  },\n  slider: {\n    width: '90%'\n  }\n}));\nconst mockCodes = ['KPNL145', 'KNUGOVNO', '145LOVE145'];\nconst mockCities = ['Rubizhne', 'Paris', 'London']; //TODO change prices, possibly write custom Label Format\n\nconst mockMaxPrice = 10000;\nconst marks = [{\n  value: 0,\n  label: '00:00'\n}, {\n  value: 360,\n  label: '06:00'\n}, {\n  value: 720,\n  label: '12:00'\n}, {\n  value: 1080,\n  label: '18:00'\n}, {\n  value: 1439,\n  label: '23:59'\n}];\n\nfunction valueLabelFormat(value) {\n  let hours = Math.floor(value / 60);\n  let hourBegin = 60 * hours;\n  let minutes = value - hourBegin;\n  let str1 = hours.toString().padStart(2, \"0\");\n  let str2 = minutes.toString().padStart(2, \"0\");\n  return `${str1}:${str2}`;\n}\n\nconst emptyParams = {\n  code: '',\n  destination: '',\n  date: '',\n  durationOption: 0,\n  timeBegin: 0,\n  timeEnd: 1439,\n  priceBegin: 0,\n  priceEnd: mockMaxPrice\n};\n\nfunction BrowseFlights() {\n  _s();\n\n  const classes = useStyles();\n  const [showFilters, setShowFilters] = useState(true);\n  const {\n    values,\n    setValues,\n    handleInputChange,\n    resetForm\n  } = useForm(emptyParams);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  useEffect(() => {\n    console.log(values);\n  }, [values]); //TODO: fetch codes, cities\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {},\n      children: [\"Filters\", /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"primary\",\n        \"aria-label\": \"show filters\",\n        size: \"small\",\n        onClick: () => setShowFilters(!showFilters),\n        children: showFilters ? /*#__PURE__*/_jsxDEV(ArrowDropUpIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 32\n        }, this) : /*#__PURE__*/_jsxDEV(ArrowDropDownIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 54\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this), !showFilters ? null : /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 5,\n          alignItems: \"center\",\n          className: classes.grid,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 2,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Flight Code:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 10,\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              value: values.code,\n              onInputChange: (event, newInputValue) => {\n                setValues({ ...values,\n                  code: newInputValue\n                });\n              },\n              className: classes.input,\n              size: \"small\",\n              id: \"combo-box-code\",\n              options: mockCodes,\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                placeholder: \"KPNL145\",\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 58\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 2,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Destination:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 10,\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              value: values.destination,\n              onInputChange: (event, newInputValue) => {\n                setValues({ ...values,\n                  destination: newInputValue\n                });\n              },\n              className: classes.input,\n              size: \"small\",\n              id: \"combo-box-destination\",\n              options: mockCities,\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                placeholder: \"Rubizhne\",\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 58\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 2,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 10,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              value: values.date,\n              onChange: event => {\n                setValues({ ...values,\n                  date: event.target.value\n                });\n              },\n              className: classes.input,\n              id: \"date\",\n              type: \"date\",\n              variant: \"outlined\",\n              size: \"small\",\n              InputLabelProps: {\n                shrink: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 2,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Flight Duration:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 10,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              className: classes.input,\n              variant: \"outlined\",\n              size: \"small\",\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                id: \"duration\",\n                value: values.durationOption,\n                onChange: event => {\n                  setValues({ ...values,\n                    durationOption: event.target.value\n                  });\n                },\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 0,\n                  children: \"Any\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 2,\n                  children: \"Short \\u2014 0-2 hr\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 6,\n                  children: \"Medium \\u2014 2-6 hr\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 10,\n                  children: \"Long \\u2014 6+ hr\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 2,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Departure Time:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 10,\n            children: /*#__PURE__*/_jsxDEV(Slider\n            /* value={[values.timeBegin,values.timeEnd]}\n            onChange={handleInputChange} */\n            , {\n              className: classes.slider,\n              valueLabelFormat: valueLabelFormat,\n              defaultValue: [values.timeBegin, values.timeEnd],\n              step: 1,\n              min: 0,\n              max: 1439,\n              marks: marks,\n              valueLabelDisplay: \"auto\",\n              \"aria-labelledby\": \"non-linear-slider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 2,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Price:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 10,\n            children: /*#__PURE__*/_jsxDEV(Slider\n            /* value={[values.priceBegin, values.priceEnd]}\n            onChange={handleInputChange} */\n            , {\n              className: classes.slider,\n              defaultValue: [values.priceBegin, values.priceEnd],\n              step: 1,\n              min: 1,\n              max: mockMaxPrice,\n              valueLabelDisplay: \"auto\",\n              \"aria-labelledby\": \"non-linear-slider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 13\n  }, this);\n} //$(window).width() > 600 ? '100%' : 500\n\n\n_s(BrowseFlights, \"b4apeXy/Kz+n1zEgje57qZbIIMs=\", false, function () {\n  return [useStyles, useForm];\n});\n\n_c = BrowseFlights;\nexport default BrowseFlights;\n\nvar _c;\n\n$RefreshReg$(_c, \"BrowseFlights\");","map":{"version":3,"sources":["/storage/Uni/VII_semester/SE/se-front/src/BrowseFlights.js"],"names":["React","Component","useState","useEffect","ArrowDropDownIcon","ArrowDropUpIcon","makeStyles","Button","IconButton","TextField","Autocomplete","FormControl","Grid","InputLabel","MenuItem","Paper","Select","Slider","Typography","$","useForm","Form","useStyles","theme","paper","verticalAlign","margin","spacing","width","backgroundColor","grid","padding","input","slider","mockCodes","mockCities","mockMaxPrice","marks","value","label","valueLabelFormat","hours","Math","floor","hourBegin","minutes","str1","toString","padStart","str2","emptyParams","code","destination","date","durationOption","timeBegin","timeEnd","priceBegin","priceEnd","BrowseFlights","classes","showFilters","setShowFilters","values","setValues","handleInputChange","resetForm","handleSubmit","e","preventDefault","console","log","event","newInputValue","params","target","shrink"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { FormControl, Grid, InputLabel, MenuItem, Paper, Select, Slider, Typography, } from '@material-ui/core';\nimport $ from 'jquery';\nimport { useForm, Form } from './useForm';\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        verticalAlign: 'middle',\n        '& > *': {\n            margin: theme.spacing(2),\n            width: '100%',\n            /* height: theme.spacing(16), */\n        },\n        backgroundColor: '#f2f2f2',\n    },\n    grid: {\n        padding: theme.spacing(1),\n    },\n    input: {\n        width: 300,\n    },\n    slider: {\n        width: '90%',\n    }\n}));\n\nconst mockCodes = [\n    'KPNL145',\n    'KNUGOVNO',\n    '145LOVE145',\n];\n\nconst mockCities = [\n    'Rubizhne',\n    'Paris',\n    'London',\n];\n\n//TODO change prices, possibly write custom Label Format\nconst mockMaxPrice = 10000;\n\nconst marks = [\n    {\n        value: 0,\n        label: '00:00',\n    },\n    {\n        value: 360,\n        label: '06:00',\n    },\n    {\n        value: 720,\n        label: '12:00',\n    },\n    {\n        value: 1080,\n        label: '18:00',\n    },\n    {\n        value: 1439,\n        label: '23:59',\n    },\n];\n\nfunction valueLabelFormat(value) {\n    let hours = Math.floor(value / 60);\n    let hourBegin = 60 * hours;\n    let minutes = value - hourBegin;\n\n    let str1 = hours.toString().padStart(2, \"0\");\n    let str2 = minutes.toString().padStart(2, \"0\");\n\n    return `${str1}:${str2}`;\n}\n\nconst emptyParams = {\n    code: '',\n    destination: '',\n    date: '',\n    durationOption: 0,\n    timeBegin: 0,\n    timeEnd: 1439,\n    priceBegin: 0,\n    priceEnd: mockMaxPrice,\n};\n\nfunction BrowseFlights() {\n    const classes = useStyles();\n    const [showFilters, setShowFilters] = useState(true);\n\n    const {\n        values,\n        setValues,\n        handleInputChange,\n        resetForm\n    } = useForm(emptyParams);\n\n    const handleSubmit = e => {\n        e.preventDefault()\n    }\n\n    useEffect(() => {\n        console.log(values)\n    },[values])\n\n    //TODO: fetch codes, cities\n\n    return (<div>\n        <div style={{}}>\n            Filters\n            <IconButton\n                color=\"primary\"\n                aria-label=\"show filters\"\n                size=\"small\"\n                onClick={() => setShowFilters(!showFilters)}\n            >\n                {showFilters ? <ArrowDropUpIcon /> : <ArrowDropDownIcon />}\n            </IconButton>\n        </div>\n\n\n        {!showFilters ? null :\n            <Paper elevation={3} className={classes.paper}>\n                <Form onSubmit={handleSubmit}>\n                    <Grid container spacing={5} alignItems=\"center\" className={classes.grid}>\n                        <Grid item xs={12} md={2}>\n                            <Typography>Flight Code:</Typography>\n                        </Grid>\n                        <Grid item xs={12} md={10}>\n                            <Autocomplete\n                                value={values.code}\n                                onInputChange={(event, newInputValue) => {\n                                    setValues({\n                                        ...values,\n                                        code: newInputValue\n                                    })\n                                }}\n                                className={classes.input}\n                                size=\"small\"\n                                id=\"combo-box-code\"\n                                options={mockCodes}\n                                renderInput={(params) => <TextField {...params} placeholder=\"KPNL145\" variant=\"outlined\" />}\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} md={2}>\n                            <Typography>Destination:</Typography>\n                        </Grid>\n                        <Grid item xs={12} md={10}>\n                            <Autocomplete\n                                value={values.destination}\n                                onInputChange={(event, newInputValue) => {\n                                    setValues({\n                                        ...values,\n                                        destination: newInputValue\n                                    })\n                                }}\n                                className={classes.input}\n                                size=\"small\"\n                                id=\"combo-box-destination\"\n                                options={mockCities}\n                                renderInput={(params) => <TextField {...params} placeholder=\"Rubizhne\" variant=\"outlined\" />}\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} md={2}>\n                            <Typography>Date:</Typography>\n                        </Grid>\n                        <Grid item xs={12} md={10}>\n                            <TextField\n                                value={values.date}\n                                onChange={(event) => {\n                                    setValues({\n                                        ...values,\n                                        date: event.target.value\n                                    })\n                                }}\n                                className={classes.input}\n                                id=\"date\"\n                                type=\"date\"\n                                variant='outlined'\n                                size=\"small\"\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} md={2}>\n                            <Typography>Flight Duration:</Typography>\n                        </Grid>\n                        <Grid item xs={12} md={10}>\n                            <FormControl\n                                className={classes.input}\n                                variant=\"outlined\"\n                                size='small'\n                            >\n                                <Select\n                                    id=\"duration\"\n                                    value={values.durationOption}\n                                    onChange={(event) => {\n                                        setValues({\n                                            ...values,\n                                            durationOption: event.target.value\n                                        })\n                                    }}\n                                >\n                                    {/*TODO CHANGE VALUES FOR OPTIONS*/}\n                                    <MenuItem value={0}>Any</MenuItem>\n                                    <MenuItem value={2}>Short — 0-2 hr</MenuItem>\n                                    <MenuItem value={6}>Medium — 2-6 hr</MenuItem>\n                                    <MenuItem value={10}>Long — 6+ hr</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n\n                        <Grid item xs={12} md={2}>\n                            <Typography>Departure Time:</Typography>\n                        </Grid>\n                        <Grid item xs={12} md={10}>\n                            <Slider\n                                /* value={[values.timeBegin,values.timeEnd]}\n                                onChange={handleInputChange} */\n                                className={classes.slider}\n                                valueLabelFormat={valueLabelFormat}\n                                defaultValue={[values.timeBegin, values.timeEnd]}\n                                step={1}\n                                min={0}\n                                max={1439}\n                                marks={marks}\n                                valueLabelDisplay=\"auto\"\n                                aria-labelledby=\"non-linear-slider\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} md={2}>\n                            <Typography>Price:</Typography>\n                        </Grid>\n                        <Grid item xs={12} md={10}>\n                            <Slider\n                                /* value={[values.priceBegin, values.priceEnd]}\n                                onChange={handleInputChange} */\n                                className={classes.slider}\n                                defaultValue={[values.priceBegin, values.priceEnd]}\n                                step={1}\n                                min={1}\n                                max={mockMaxPrice}\n                                valueLabelDisplay=\"auto\"\n                                aria-labelledby=\"non-linear-slider\"\n                            />\n                        </Grid>\n\n                    </Grid>\n                </Form>\n            </Paper>\n        }\n\n    </div>);\n\n}\n\n//$(window).width() > 600 ? '100%' : 500\nexport default BrowseFlights;"]},"metadata":{},"sourceType":"module"}