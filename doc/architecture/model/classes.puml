@startuml classes

class AuthServer {
    create(name, email, password) User
    authorize(email, password) Token
    validate(Token) bool
}

class PaymentServer {
    process(amount) Error
}

class MainServer {
    get_flight() Flight
    order(flight, details...) Error
    store(order)
}

class AdminServer {
    <CRUD operations>
}

class Airport {
    id: int
    name: str
    city: str
    info: str
}

class User {
    id: int
    email: str
    created_at: datetime.time
    last_order() Order
}

class Order {
    id: int
    created_at: datetime.time
    state: State
}

class Ticket {
    id: int
    seat: int
    type: Type
    price: int
    passenger: str
}

class Direction {
    id: int
    to: Airport
}

class Flight {
    id: int
    departure_at: datetime.time
    arrival_at: datetime.time
    price: int
}

class Payment {
    amount: int
}

Order     --o Payment
Direction --> Flight
Order     --> User
Ticket    --o Order
Flight    --> Ticket
Airport   --> Direction

@enduml
